<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <h1>Register</h1>
    <form id="registerForm" action="/register" method="post">
        <input type="hidden" name="_csrf" value="<%= csrfToken %>">
        <label for="username">Username:</label>
        <input type="text" id="username" name="username" required>
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
        <label for="password">Password:</label>
        <input type="password" id="password" name="password" required>
        <button type="submit">Register</button>
    </form>

    <script>
        // Обработчик отправки формы регистрации
        document.getElementById('registerForm').addEventListener('submit', function(event) {
            event.preventDefault(); // Предотвращаем стандартное поведение отправки формы
            const formData = {
                username: document.getElementById('username').value,
                email: document.getElementById('email').value,
                password: document.getElementById('password').value,
                _csrf: document.querySelector('input[name="_csrf"]').value // Добавляем CSRF токен в данные формы
            };

            // Отправка данных формы через XMLHttpRequest
            const xhr = new XMLHttpRequest();
            xhr.open('POST', '/register');
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.onreadystatechange = function() {
                if (xhr.readyState === XMLHttpRequest.DONE) {
                    if (xhr.status === 200) {
                        console.log('Registration successful');
                        // Можно выполнить дополнительные действия после успешной регистрации
                        window.location.href = '/main'; // Перенаправление на главную страницу
                    } else {
                        console.error('Registration failed:', xhr.responseText);
                    }
                }
            };
            xhr.send(JSON.stringify(formData));
        });

        // Проверка токена при загрузке страницы
        document.addEventListener('DOMContentLoaded', function () {
            fetch('/your-protected-route', { method: 'GET' })
                .then(response => {
                    if (response.status === 401) {
                        return response.json().then(data => {
                            if (data.msg === 'Token expired, please log in again') {
                                alert('Your session has expired. Please log in again.');
                                window.location.href = '/login';
                            } else {
                                alert('Unauthorized access. Please log in.');
                                window.location.href = '/login';
                            }
                        });
                    } else {
                        // Handle other statuses
                    }
                })
                .catch(error => console.error('Error:', error));
        });
    </script>
</body>
</html>